{"version":3,"sources":["BooksAPI.js","components/ListingBooks.js","components/Home.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ListingBooks","thumbnail","_this$props","this","props","updateShelf","currentShelf","imageLinks","react_default","a","createElement","className","style","width","height","backgroundImage","onChange","event","target","value","disabled","title","authors","React","Component","Home","currentlyReading","filter","wantToRead","read","map","key","components_ListingBooks","react_router_dom","to","Search","state","tab","empty","_this","setState","SearchQuery","length","BooksAPI","searchedBooks","error","_this2","placeholder","type","searchedBook","forEach","App","isloaded","updatebook","componentDidMount","_this3","react_router","path","exact","render","components_Home","components_Search","ReactDOM","src_App_0","document","getElementById"],"mappings":"8PACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERc,EAAS,SAACC,GAAD,OACpBnB,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEE,YACtBjB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,wBCJRc,mLApCH,IAEKC,EAFLC,EACkCC,KAAKC,MAArClB,EADFgB,EACEhB,MAAMmB,EADRH,EACQG,YAAYC,EADpBJ,EACoBI,aAO5B,OAJQL,EADAf,EAAMqB,WACMrB,EAAMqB,WAAWN,UAEjB,GAGhBO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,OAAAlC,OAAQoB,EAAR,QAC7EO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UACAM,SAAU,SAACC,GAAD,OAAWZ,EAAYnB,EAAO+B,EAAMC,OAAOC,QACrDA,MAAOb,GAELE,EAAAC,EAAAC,cAAA,UAAQS,MAAM,OAAOC,UAAQ,GAA7B,cACAZ,EAAAC,EAAAC,cAAA,UAAQS,MAAM,oBAAd,qBACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,cAAd,gBACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,QAAd,QACAX,EAAAC,EAAAC,cAAA,UAAQS,MAAM,QAAd,WAINX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAczB,EAAMmC,OACnCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBzB,EAAMoC,kBA7BpCC,IAAMC,WC0ElBC,mLAtEJ,IAAAvB,EACuBC,KAAKC,MAA3BlB,EADDgB,EACChB,MAAMmB,EADPH,EACOG,YACRqB,EAAmBxC,EAAMyC,OAAO,SAACvC,GAAD,MAAyB,qBAAfA,EAAKC,QAC/CuC,EAAa1C,EAAMyC,OAAO,SAACvC,GAAD,MAAyB,eAAfA,EAAKC,QACzCwC,EAAO3C,EAAMyC,OAAO,SAACvC,GAAD,MAAyB,SAAfA,EAAKC,QACzC,OACEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXe,EAAiBI,IAAI,SAAC1C,GAAD,OACpBoB,EAAAC,EAAAC,cAAA,MAAIqB,IAAK3C,EAAKE,IACZkB,EAAAC,EAAAC,cAACsB,EAAD,CACA9C,MAAOE,EACPiB,YAAaA,EACbC,aAAclB,EAAKC,cAO7BmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXiB,EAAWE,IAAI,SAAC1C,GAAD,OACdoB,EAAAC,EAAAC,cAAA,MAAIqB,IAAK3C,EAAKE,IACZkB,EAAAC,EAAAC,cAACsB,EAAD,CAAc9C,MAAOE,EACrBiB,YAAaA,EACZC,aAAclB,EAAKC,cAQ9BmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXkB,EAAKC,IAAI,SAAC1C,GAAD,OACRoB,EAAAC,EAAAC,cAAA,MAAIqB,IAAK3C,EAAKE,IACZkB,EAAAC,EAAAC,cAACsB,EAAD,CAAc9C,MAAOE,EACrBiB,YAAaA,EACZC,aAAclB,EAAKC,gBASlCmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAG,WACP1B,EAAAC,EAAAC,cAAA,kCAjEOa,IAAMC,kBCqFVW,6MAnFXC,MAAM,CACFrC,MAAO,GACPsC,IAAK,GACLC,OAAO,KAEXxC,OAAO,SAACC,GACJwC,EAAKC,SAAS,CACVzC,MAAMA,IAETwC,EAAKE,YAAY1C,MAEtB0C,YAAY,SAAC1C,GACQ,IAAhBA,EAAM2C,OACNC,EAAgB5C,GAAOjB,KAAK,SAAC8D,GAClBA,EAAcC,MACdN,EAAKC,SAAS,CAAEH,IAAK,KAGrBE,EAAKC,SAAS,CAAEH,IAAKO,EAAcN,OAAM,MAMjDC,EAAKC,SAAU,CAAEF,OAAM,6EAGvB,IAAAQ,EAAA3C,KAAAD,EACmBC,KAAKC,MAAxBlB,EADAgB,EACAhB,MAAMmB,EADNH,EACMG,YACV,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAG,KACX1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAlB,UAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAQqC,YAAY,kBACnB5B,MAAOhB,KAAKiC,MAAMrC,MAClBiD,KAAK,OACLhC,SAAU,SAACC,GAAS6B,EAAKhD,OAAOmB,EAAMC,OAAOC,YAI3CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACpBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAEJR,KAAKiC,MAAMC,IAAIP,IAAI,SAAAmB,GAEf,IAAI5D,EAAQ,OAQd,OAPEH,EAAMgE,QAAQ,SAAA9D,GACNA,EAAKE,KAAO2D,EAAa3D,GACzB2D,EAAa5D,MAAQ,OAErBA,EAAQD,EAAKC,SAGD,IAAnByD,EAAKV,MAAME,MAER9B,EAAAC,EAAAC,cAAA,MAAIqB,IAAKkB,EAAa3D,IACrBkB,EAAAC,EAAAC,cAACsB,EAAD,CACF9C,MAAO+D,EACV5C,YAAaA,EACbC,aAAcjB,KAORmB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKkB,EAAa3D,iBAvEnCiC,IAAMC,WCoDZ2B,6MAjDbf,MAAM,CACJhD,KAAK,GACLgE,UAAU,KAUZ/C,YAAY,SAACgD,EAAWhE,GACxBsD,EAAgBU,EAAWhE,GACzBsD,IAAkB7D,KAAK,SAACC,GACtBwD,EAAKC,SAAS,CACZpD,KAAKL,EACLqE,UAAS,MAGbb,EAAKe,wGAhBa,IAAAR,EAAA3C,KAClBwC,IAAkB7D,KAAK,SAACC,GACtB+D,EAAKN,SAAS,CACZpD,KAAKL,EACLqE,UAAS,uCAcN,IAAAG,EAAApD,KACP,OAAGA,KAAKiC,MAAMgB,SAEZ5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAC5BnD,EAAAC,EAAAC,cAACkD,EAAD,CACA1E,MAAOqE,EAAKnB,MAAMhD,KAClBiB,YAAakD,EAAKlD,iBAGvBG,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOC,KAAK,UAAWE,OAAQ,kBAC1BnD,EAAAC,EAAAC,cAACmD,EAAD,CACA3E,MAAOqE,EAAKnB,MAAMhD,KAClBiB,YAAakD,EAAKlD,kBAOrBG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BA5CSa,IAAMC,iBCAxBsC,IAASH,OAETnD,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACAzB,EAAAC,EAAAC,cAACqD,EAAD,MADA,KAIAC,SAASC,eAAe","file":"static/js/main.472257bc.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\"\r\nclass ListingBooks extends React.Component{\r\n  \r\n    render(){\r\n        const{books,updateShelf,currentShelf}=this.props\r\n             let thumbnail\r\n        if (books.imageLinks) {\r\n            thumbnail = books.imageLinks.thumbnail\r\n        } else {\r\n            thumbnail = ''\r\n        }\r\n    return(\r\n        <div className=\"list-books\">\r\n                        <div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:`url(${thumbnail})` }}></div>\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select   \r\n                              onChange={(event) => updateShelf(books, event.target.value)}\r\n                              value={currentShelf}\r\n                              >\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\"  >Currently Reading</option>\r\n                                <option value=\"wantToRead\" >Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{books.title}</div>\r\n                          <div className=\"book-authors\">{books.authors}</div>\r\n                        </div>\r\n                    </div>\r\n         \r\n    )\r\n                      }\r\n\r\n    \r\n}\r\nexport default ListingBooks;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ListingBooks from \"./ListingBooks\";\r\nclass Home extends React.Component {\r\n\r\n  render() {\r\n    const { books,updateShelf } = this.props;\r\n    const currentlyReading = books.filter((book) => book.shelf === \"currentlyReading\");\r\n    const wantToRead = books.filter((book) => book.shelf === \"wantToRead\");\r\n    const read = books.filter((book) => book.shelf === \"read\");\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {currentlyReading.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks \r\n                      books={book} \r\n                      updateShelf={updateShelf}\r\n                      currentShelf={book.shelf}\r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {wantToRead.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks books={book} \r\n                      updateShelf={updateShelf}\r\n                       currentShelf={book.shelf}\r\n                      \r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {read.map((book) => (\r\n                    <li key={book.id}>\r\n                      <ListingBooks books={book} \r\n                      updateShelf={updateShelf}\r\n                       currentShelf={book.shelf}\r\n                      />\r\n                    </li>\r\n                  ))}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            <button>Search</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport ListingBooks from \"./ListingBooks\"\r\nimport * as BooksAPI from '../BooksAPI'\r\nclass Search extends React.Component{\r\n    state={\r\n        query: '',\r\n        tab: [],\r\n        empty: false\r\n    }\r\n    search=(query)=>{\r\n        this.setState({\r\n            query:query\r\n        })\r\n         this.SearchQuery(query)\r\n    }\r\n    SearchQuery=(query)=>{\r\n      if(query.length !==0){\r\n         BooksAPI.search(query).then((searchedBooks) => {\r\n                if (searchedBooks.error) {\r\n                    this.setState({ tab: []}) \r\n                }\r\n                    else {\r\n                    this.setState({ tab: searchedBooks,empty:false})\r\n                   }\r\n            }\r\n            )\r\n        } \r\n        else {\r\n            this.setState ({ empty:true})  \r\n               }\r\n      }    \r\n    render(){\r\n      const{books,updateShelf}=this.props\r\n        return(\r\n            <div className=\"search-books\">\r\n             \r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\">\r\n              <button className=\"close-search\" >Close</button>\r\n              </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                <input  placeholder=\"Search by title\"\r\n                 value={this.state.query}\r\n                 type=\"text\"\r\n                 onChange={(event)=>{this.search(event.target.value)   \r\n                   }}/>\r\n              </div>\r\n            </div>\r\n                   <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                    {   \r\n                        this.state.tab.map(searchedBook => {\r\n                          \r\n                            let shelf = \"none\"\r\n                            books.forEach(book => {\r\n                                if (book.id !== searchedBook.id) {\r\n                                    searchedBook.shelf = \"none\"\r\n                                } else {\r\n                                    shelf = book.shelf\r\n                                }\r\n                            })\r\n                          if(this.state.empty===false){   \r\n                            return(\r\n                                <li key={searchedBook.id}>\r\n                                 <ListingBooks \r\n                               books={searchedBook} \r\n                            updateShelf={updateShelf}\r\n                            currentShelf={shelf}\r\n                                />\r\n                            </li>\r\n                            )\r\n                        }\r\n                        else{\r\n                          return(\r\n                                  <li key={searchedBook.id}>\r\n                            </li>\r\n                          )\r\n                        }\r\n                        }\r\n                        )\r\n                    }\r\n              </ol>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport Home from './components/Home'\r\nimport {Route} from \"react-router-dom\"\r\nimport Search from './components/Search'\r\nclass App extends React.Component {\r\n  state={\r\n    book:[],\r\n    isloaded: false\r\n  }\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((res) => {\r\n      this.setState({ \r\n        book:res ,\r\n        isloaded:true\r\n      })\r\n    })\r\n  }\r\n  updateShelf=(updatebook,shelf)=>{\r\n  BooksAPI.update(updatebook,shelf);\r\n    BooksAPI.getAll().then((res) => {\r\n      this.setState({ \r\n        book:res ,\r\n        isloaded:true\r\n      })\r\n    })\r\n    this.componentDidMount()\r\n  }\r\n  render() {\r\n    if(this.state.isloaded){\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path=\"/\" exact render={()=>(\r\n          <Home \r\n          books={this.state.book}\r\n          updateShelf={this.updateShelf}\r\n          />\r\n        ) }></Route>\r\n     <Route path=\"/search\"  render={()=>(\r\n          <Search \r\n          books={this.state.book}\r\n          updateShelf={this.updateShelf}\r\n          />\r\n        ) }></Route> \r\n      </div>\r\n    )\r\n     }\r\n     return(\r\n       <div>\r\n         <h1>Loading</h1>\r\n       </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n\r\n<BrowserRouter>\r\n<App />, \r\n</BrowserRouter>,\r\n\r\ndocument.getElementById('root'))\r\n\r\n"],"sourceRoot":""}